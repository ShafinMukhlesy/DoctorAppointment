@model DoctorAppointment.Models.Appointment

@{
    ViewBag.Title = "Book Appointment - Step 2";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" />

<div class="container mt-5">
    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
            <h3 class="mb-0">Fill Patient Information</h3>
            @Html.ActionLink(
            "➕ Add New Patient",
            "CreateEdit",
            "Patient",
            new { returnUrl = Request.Url.AbsoluteUri }, // route values
            new { @class = "btn btn-light btn-sm" }      // html attributes
        )

        </div>

        <div class="card-body">
            @using (Html.BeginForm("Create", "Appointment", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @Html.HiddenFor(m => m.OrganizationId)
                @Html.HiddenFor(m => m.DepartmentId)
                @Html.HiddenFor(m => m.DoctorId)
                @Html.HiddenFor(m => m.AppointmentDate)
                @Html.HiddenFor(m => m.AppointmentTime)


                <div class="row mb-3">
                    <div class="col-md-6">
                        @Html.Label("Search by Phone Number", htmlAttributes: new { @class = "form-label" })
                        <div class="input-group">
                            <input type="text" id="phoneSearch" class="form-control" placeholder="Enter phone number" />
                            <button type="button" id="btnSearch" class="btn btn-outline-primary">Search</button>
                        </div>
                    </div>
                </div>


                <div class="row mb-3">
                    <div class="col-md-6">
                        @Html.Label("Patient", htmlAttributes: new { @class = "form-label" })

                        @Html.DropDownList("PatientId", null, "-- Select Patient --", new { @class = "form-select" })
                        @Html.ValidationMessageFor(model => model.PatientId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-6">
                        @Html.Label("Gender", htmlAttributes: new { @class = "form-label" })
                        <div class="input-group">
                            <input type="text" id="Gender" class="form-control" disabled />
                        </div>
                    </div>
                </div>

                <!-- Submit Button -->
                <div class="d-flex justify-content-end mt-2">
                    <button id="bookingAppointment" type="submit" class="btn btn-success me-2">Book Appointment</button>
                    @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-secondary" })
                </div>
            }
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>

</script>

<style>
    .card {
        border-radius: 15px;
    }

    .form-label {
        font-weight: 500;
    }

    .btn-success {
        min-width: 140px;
    }

    .btn-outline-primary, .btn-danger {
        height: 50px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .input-group .btn-info {
        min-width: 100px;
    }
</style>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {


            // Check if newPatientId exists in query string
            const params = new URLSearchParams(window.location.search);
            const newPatientId = params.get("newPatientId");

            if (newPatientId) {
                // Set dropdown value to new patient
                $("#PatientId").val(newPatientId);
                getGender(newPatientId);
            }

            // Bind search event
            SearchPaitent();

            // Call search immediately if you want it on page load
            // $("#btnSearch").trigger("click");

            function SearchPaitent() {

                $("#Gender").val("");
                $("#bookingAppointment").prop("disabled", true);

                $("#btnSearch").click(function () {

                    $("#Gender").val("");
                    $("#bookingAppointment").prop("disabled", true);
                    var phone = $("#phoneSearch").val();
                    //if (phone.trim() === "") {
                    //    alert("Please enter a phone number.");
                    //    return;
                    //}

                    $.ajax({
                        url: '@Url.Action("GetPatientsByPhone", "Appointment")',
                        type: "GET",
                        data: { phone: phone },
                        success: function (data) {
                            var ddl = $("#PatientId");
                            ddl.empty();
                            ddl.append($("<option>").val("").text("-- Select Patient --"));

                            if (data && data.length > 0) {
                                $.each(data, function (i, patient) {
                                    ddl.append($("<option>").val(patient.PatientId).text(patient.FullName));
                                });
                            } else {
                                ddl.append($("<option>").val("").text("No patient found"));
                            }
                        },
                        error: function () {
                            alert("Error while fetching patients.");
                        }
                    });
                });
            }

            $("#PatientId").on("change", function () {

                var patientId = $(this).val();
                getGender(patientId);
            });
            // Change event for patient dropdown
            function getGender(patientId) {

                if (patientId && patientId !== "") {
                    $.getJSON('@Url.Action("GetPatientGender", "Appointment")',
                        { patientId: patientId },
                        function (data) {
                            if (data) {
                                $("#Gender").val(data);
                                $("#bookingAppointment").prop("disabled", false);
                            } else {
                                $("#Gender").val("");
                            }
                        });
                } else {
                    $("#Gender").val("");
                }
               
            }

        });
    </script>
}
